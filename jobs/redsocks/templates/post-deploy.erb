#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
#source /var/vcap/jobs/terraform-apply/helpers/ctl_setup.sh 'terraform-apply'
# see https://learn.hashicorp.com/terraform/development/running-terraform-in-automation
# see https://learn.hashicorp.com/terraform/development/running-terraform-in-automation#pre-installed-plugins


#!/bin/sh
# Create new chain
sudo iptables -t nat -N REDSOCKS
# Ignore LANs and some other reserved addresses.



#accept tcp inbound traffic, route to REDSOCKS chain
#sudo iptables -t nat -A PREROUTING -p tcp -s 192.168.0.0/16 -j REDSOCKS
#sudo iptables -t nat -A PREROUTING -i eth0 -p tcp -j REDSOCKS
sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 443 -j REDSOCKS 

#to catch direct outbound traffic from redsocks vm
#sudo iptables -t nat -A OUTPUT -p tcp --dport 80 -j REDSOCKS
#sudo iptables -t nat -A OUTPUT -p tcp --dport 443 -j REDSOCKS


sudo iptables -t nat -A REDSOCKS -d 0.0.0.0/8 -j RETURN
sudo iptables -t nat -A REDSOCKS -d 10.0.0.0/8 -j RETURN
sudo iptables -t nat -A REDSOCKS -d 127.0.0.0/8 -j RETURN
sudo iptables -t nat -A REDSOCKS -d 169.254.0.0/16 -j RETURN
sudo iptables -t nat -A REDSOCKS -d 172.16.0.0/12 -j RETURN
sudo iptables -t nat -A REDSOCKS -d 192.168.0.0/16 -j RETURN
sudo iptables -t nat -A REDSOCKS -d 224.0.0.0/4 -j RETURN
sudo iptables -t nat -A REDSOCKS -d 240.0.0.0/4 -j RETURN
# Anything else should be redirected to port 12345
sudo iptables -t nat -A REDSOCKS -p tcp -j REDIRECT --to-ports 12346




EXITSTATUS=0

echo "post deploy create iptabes is complete; exit status $EXITSTATUS"
exit $EXITSTATUS
